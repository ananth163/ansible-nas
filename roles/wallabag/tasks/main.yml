---
- name: Start Wallabag
  block:
    - name: Create Wallabag Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: 65534
        group: 65534
      with_items:
        - "{{ wallabag_data_directory }}/data"
        - "{{ wallabag_data_directory }}/data/db"
        - "{{ wallabag_data_directory }}/images"

    - name: Wallabag Docker Container
      community.docker.docker_container:
        name: "{{ wallabag_container_name }}"
        image: "{{ wallabag_image_name }}:{{ wallabag_image_version }}"
        pull: true
        volumes:
          - "{{ wallabag_data_directory }}/data:/var/www/wallabag/data:rw"
          - "{{ wallabag_data_directory }}/images:/var/www/wallabag/web/assets/images:rw"
        ports: >
              {{
                wallabag__ports 
                if lazytainer_wallabag_enabled is false else [] 
              }}
        env:
          SYMFONY__ENV__DOMAIN_NAME: "https://wallabag.{{ ansible_nas_domain }}"
        restart_policy: unless-stopped
        network_mode: '{{ lazytainer_container if lazytainer_wallabag_enabled is true else omit }}'
        memory: "{{ wallabag_memory }}"
        labels:
          traefik.enable: "{{ wallabag_available_externally | string }}"
          traefik.http.routers.wallabag.rule: "Host(`{{ wallabag_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.wallabag.tls.certresolver: "letsencrypt"
          traefik.http.routers.wallabag.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.wallabag.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.wallabag.loadbalancer.server.port: "80"
          lazytainer.group: "wallabag"
  when: wallabag_enabled is true

- name: Stop Wallabag
  block:
    - name: Stop Wallabag
      community.docker.docker_container:
        name: "{{ wallabag_container_name }}"
        state: absent
  when: wallabag_enabled is false
