---
- name: Start Couchpotato
  block:
    - name: Create Couchpotato Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        # mode: 0755
      with_items:
        - "{{ docker_home }}/couchpotato/config"

    - name: Couchpotato Docker Container
      community.docker.docker_container:
        name: "{{ couchpotato_container_name }}"
        image: linuxserver/couchpotato
        pull: true
        volumes:
          - "{{ couchpotato_config_directory }}:/config:rw"
          - "{{ couchpotato_downloads_directory }}:/downloads:rw"
          - "{{ couchpotato_movies_directory }}:/movies:rw"
          - "{{ couchpotato_torrents_directory }}:/torrents:rw"
        ports: >
              {{
                couchpotato__ports 
                if lazytainer_couchpotato_enabled is false else [] 
              }}
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ couchpotato_user_id }}"
          PGID: "{{ couchpotato_group_id }}"
        network_mode: '{{ lazytainer_container if lazytainer_couchpotato_enabled is true else omit }}'
        restart_policy: unless-stopped
        memory: "{{ couchpotato_memory }}"
        labels:
          traefik.enable: "{{ couchpotato_available_externally | string }}"
          traefik.http.routers.couchpotato.rule: "Host(`couchpotato.{{ ansible_nas_domain }}`)"
          traefik.http.routers.couchpotato.tls.certresolver: "letsencrypt"
          traefik.http.routers.couchpotato.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.couchpotato.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.couchpotato.loadbalancer.server.port: "5050"
          lazytainer.group: "couchpotato"
  when: couchpotato_enabled is true

- name: Stop Couchpotato
  block:
    - name: Stop Couchpotato
      community.docker.docker_container:
        name: "{{ couchpotato_container_name }}"
        state: absent
  when: couchpotato_enabled is false
