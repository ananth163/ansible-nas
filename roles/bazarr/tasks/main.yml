---
- name: Start Bazarr
  block:
    - name: Create Bazarr Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ bazarr_data_directory }}"

    - name: Bazarr
      community.docker.docker_container:
        name: "{{ bazarr_container_name }}"
        image: linuxserver/bazarr
        pull: true
        volumes:
          - "{{ bazarr_tv_directory }}:/tv:rw"
          - "{{ bazarr_movies_directory }}:/movies:rw"
          - "{{ bazarr_data_directory }}:/config:rw"
        ports: >
              {{
                bazarr__ports 
                if lazytainer_bazarr_enabled is false else [] 
              }}
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ bazarr_user_id }}"
          PGID: "{{ bazarr_group_id }}"
        network_mode: '{{ lazytainer_container if lazytainer_bazarr_enabled is true else omit }}'
        restart_policy: unless-stopped
        memory: "{{ bazarr_memory }}"
        labels:
          traefik.enable: "{{ bazarr_available_externally | string }}"
          traefik.http.routers.bazarr.rule: "Host(`{{ bazarr_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.bazarr.tls.certresolver: "letsencrypt"
          traefik.http.routers.bazarr.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.bazarr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.bazarr.loadbalancer.server.port: "6767"
          lazytainer.group: "bazarr"
  when: bazarr_enabled is true

- name: Stop Bazarr
  block:
    - name: Stop Bazarr
      community.docker.docker_container:
        name: "{{ bazarr_container_name }}"
        state: absent
  when: bazarr_enabled is false
