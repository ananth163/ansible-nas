---
- name: Add Ubuntu repositories
  apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - 'deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} multiverse'
    - 'deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates multiverse'
    - 'deb-src http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-updates multiverse'
  when: ansible_distribution == 'Ubuntu'

- name: Update apt-cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  register: result
  until: result is succeeded

- name: Upgrade all packages # noqa package-latest
  ansible.builtin.apt:
    upgrade: yes
    state: latest
  register: upgrade
  retries: 15
  delay: 5
  until: upgrade is success
  when: keep_packages_updated
  tags:
    - skip_ansible_lint

- name: Disable password authentication for root
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin prohibit-password'

- name: Disable tunneled clear-text passwords
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^PasswordAuthentication yes'
    line: 'PasswordAuthentication no'

- name: Install some packages
  ansible.builtin.apt:
    name: "{{ ansible_nas_extra_packages }}"
    state: present
  register: result
  until: result is succeeded


- name: configure fail2ban for ssh
  ansible.builtin.copy:
    dest: /etc/fail2ban/jail.local
    content: "{{ f2b_jail_local }}"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart fail2ban

- name: enable fail2ban service on boot
  ansible.builtin.service:
    name: fail2ban
    enabled: true
    state: started

# simple shell script to display fail2ban-client status info; usage:

#   f2bst

#   f2bst sshd

- name: Configure f2bst
  ansible.builtin.copy:
    dest: /usr/local/bin/f2bst
    content: |

      #!/bin/sh

      fail2ban-client status $*

    owner: root
    group: root
    mode: 0750

- name: Make sure that the neofetch config folder is created
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/neofetch"
    state: directory
    owner: "{{ ansible_user }}"
    mode: "0755"

- name: Deploy the neofetch configuration file in place
  ansible.builtin.file:
    src: "{{ role_path }}/files/config.conf"
    dest: "{{ ansible_env.HOME }}/.config/neofetch/config.conf"
    state: link

- name: Install LazyDocker
  ansible.builtin.shell:
    cmd: curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
  args:
    creates: /usr/local/bin/lazydocker
  environment:
    DIR: /usr/local/bin

- name: "Set hostname to {{ ansible_nas_hostname }}"
  ansible.builtin.hostname:
    name: "{{ ansible_nas_hostname }}"

- name: "Set timezone to {{ ansible_nas_timezone }}"
  community.general.timezone:
    name: "{{ ansible_nas_timezone }}"

- name: "Permission share directories"
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: ansible-nas
    group: ansible-nas
    mode: "u=rwX,g=rwX,o=rX"
    recurse: false
  loop: "{{ samba_shares }}"
